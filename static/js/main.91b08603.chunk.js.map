{"version":3,"sources":["card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","fetch","then","response","json","users","setState","this","filteredMonsters","filter","toLowerCase","includes","toLocaleLowerCase","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6TAGaA,EAAO,SAACC,GAAD,OAChB,sBAAKC,UAAU,iBAAf,UACE,qBAAKC,IAAK,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACvB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCHXC,G,MAAW,SAAAR,GACpB,OAAO,qBAAKC,UAAU,YAAf,SACND,EAAMS,SAASC,KAAI,SAAAN,GAAO,OACtB,cAAC,EAAD,CAAuBA,QAAUA,GAAtBA,EAAQC,WCHfM,G,MAAW,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACpB,uBACCZ,UAAU,SACVa,KAAK,SACJF,YAAaA,EACZG,SAAUF,MC6BFG,G,wDAhCb,aAAe,IAAD,8BACZ,gBACKC,MAAO,CACVR,SAAU,GACVS,YAAa,IAJH,E,qDAQd,WAAoB,IAAD,OACjBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,OACxBF,MAAK,SAAAG,GAAK,OAAE,EAAKC,SAAS,CAACf,SAASc,Y,oBAGvC,WAAU,IAAD,SACyBE,KAAKR,MAA9BR,EADA,EACAA,SAAUS,EADV,EACUA,YACXQ,EAAmBjB,EAASkB,QAAO,SAAAvB,GAAO,OAAEA,EAAQE,KAAKsB,cAAcC,SAASX,EAAYY,wBAClG,OACE,sBAAK7B,UAAU,MAAf,UACA,kDACA,cAAC,EAAD,CACAW,YAAY,kBACZC,aAAe,SAAAkB,GAAC,OAAG,EAAKP,SAAS,CAACN,YAAaa,EAAEC,OAAOC,WAExD,cAAC,EAAD,CAAUxB,SAAUiB,W,GAzBRQ,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.91b08603.chunk.js","sourcesContent":["import React from'react';\r\nimport './card.style.css';\r\n\r\nexport const Card = (props) => (\r\n    <div className='card-container'>\r\n      <img alt =\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}/>\r\n      <h2>{props.monster.name}</h2>\r\n      <p>{props.monster.email}</p>\r\n    </div>\r\n);","import React from 'react';\r\nimport { Card } from '../../card/card.component';\r\nimport './card-list.style.css';\r\n\r\nexport const CardList = props => {\r\n    return <div className='card-list'>\r\n    {props.monsters.map(monster =>\r\n        (<Card key={monster.id} monster= {monster}/>))}\r\n    </div>\r\n};","import React from \"react\";\r\n\r\nimport './search-box.style.css';\r\n\r\nexport const SearchBox =({placeholder, handleChange}) => (\r\n    <input\r\n     className='search'\r\n     type='search'\r\n      placeholder={placeholder}\r\n       onChange={handleChange}/>\r\n);","import { Component } from 'react';\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\nimport './App.css';\n\nclass App extends Component{\n  constructor() {\n    super();\n    this.state ={\n      monsters: [],\n      searchField: ''\n    };\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response=>response.json()\n    .then(users=>this.setState({monsters:users})));\n  }\n\n  render() {\n    const {monsters, searchField} = this.state;\n    const filteredMonsters = monsters.filter(monster=>monster.name.toLowerCase().includes(searchField.toLocaleLowerCase()))\n    return (\n      <div className=\"App\">\n      <h1>Monsters Rolodex</h1>\n      <SearchBox\n      placeholder='search monsters'\n      handleChange ={e=> this.setState({searchField :e.target.value})}\n      />\n      <CardList monsters={filteredMonsters}/>\n         \n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}